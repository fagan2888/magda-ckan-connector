{
  "swagger" : "2.0",
  "info" : {
    "description" : "",
    "version" : "0.1",
    "title" : "",
    "termsOfService" : ""
  },
  "basePath" : "/api/0.1/",
  "tags" : [ {
    "name" : "aspect definitions"
  }, {
    "name" : "web hooks"
  }, {
    "name" : "record aspects"
  }, {
    "name" : "records"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/aspects" : {
      "get" : {
        "tags" : [ "aspect definitions" ],
        "summary" : "Get a list of all aspects",
        "description" : "",
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AspectDefinition"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "aspect definitions" ],
        "summary" : "Create a new aspect",
        "description" : "",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "aspect",
          "description" : "The definition of the new aspect.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AspectDefinition"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AspectDefinition"
            }
          }
        }
      }
    },
    "/aspects/{id}" : {
      "get" : {
        "tags" : [ "aspect definitions" ],
        "summary" : "Get an aspect by ID",
        "description" : "",
        "operationId" : "getById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the aspect to be fetched.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AspectDefinition"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "aspect definitions" ],
        "summary" : "Modify an aspect by ID",
        "description" : "Modifies the aspect with a given ID.  If an aspect with the ID does not yet exist, it is created.",
        "operationId" : "putById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the aspect to be saved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "aspect",
          "description" : "The aspect to save.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AspectDefinition"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AspectDefinition"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "aspect definitions" ],
        "summary" : "Modify an aspect by applying a JSON Patch",
        "description" : "The patch should follow IETF RFC 6902 (https://tools.ietf.org/html/rfc6902).",
        "operationId" : "patchById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the aspect to be saved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "aspectPatch",
          "description" : "The RFC 6902 patch to apply to the aspect.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JsonPatch"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AspectDefinition"
            }
          }
        }
      }
    },
    "/hooks" : {
      "get" : {
        "tags" : [ "web hooks" ],
        "summary" : "Get a list of all web hooks",
        "description" : "",
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WebHook"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "web hooks" ],
        "summary" : "Create a new web hook",
        "description" : "",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "hook",
          "description" : "The definition of the new web hook.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WebHook"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WebHook"
            }
          }
        }
      }
    },
    "/hooks/{id}" : {
      "get" : {
        "tags" : [ "web hooks" ],
        "summary" : "Get a web hook by ID",
        "description" : "",
        "operationId" : "getById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the web hook to be fetched.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WebHook"
            }
          }
        }
      }
    },
    "/records/{recordId}/aspects/{aspectId}" : {
      "get" : {
        "tags" : [ "record aspects" ],
        "summary" : "Get a record aspect by ID",
        "description" : "",
        "operationId" : "getById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "recordId",
          "in" : "path",
          "description" : "ID of the record for which to fetch an aspect.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "aspectId",
          "in" : "path",
          "description" : "ID of the aspect to fetch.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Aspect"
            }
          },
          "404" : {
            "description" : "No record or aspect exists with the given IDs.",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "record aspects" ],
        "summary" : "Modify a record aspect by ID",
        "description" : "Modifies a record aspect.  If the aspect does not yet exist on this record, it is created.",
        "operationId" : "putById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "recordId",
          "in" : "path",
          "description" : "ID of the record for which to update an aspect.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "aspectId",
          "in" : "path",
          "description" : "ID of the aspect to update.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "aspect",
          "description" : "The record aspect to save.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Aspect"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Aspect"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "record aspects" ],
        "summary" : "Delete a record aspect by ID",
        "description" : "Deletes a record aspect.",
        "operationId" : "deleteById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "recordId",
          "in" : "path",
          "description" : "ID of the record for which to delete an aspect.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "aspectId",
          "in" : "path",
          "description" : "ID of the aspect to delete.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteResult"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "record aspects" ],
        "summary" : "Modify a record aspect by applying a JSON Patch",
        "description" : "The patch should follow IETF RFC 6902 (https://tools.ietf.org/html/rfc6902).",
        "operationId" : "patchById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "recordId",
          "in" : "path",
          "description" : "ID of the record for which to fetch an aspect.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "aspectId",
          "in" : "path",
          "description" : "ID of the aspect to fetch.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "aspectPatch",
          "description" : "The RFC 6902 patch to apply to the aspect.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JsonPatch"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Aspect"
            }
          }
        }
      }
    },
    "/records/{recordId}/aspects" : {
      "get" : {
        "tags" : [ "record aspects" ],
        "summary" : "Get a list of all aspects of a record",
        "description" : "",
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "recordId",
          "in" : "path",
          "description" : "ID of the record for which to fetch aspects.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/Aspect"
              }
            }
          }
        }
      }
    },
    "/records" : {
      "get" : {
        "tags" : [ "records" ],
        "summary" : "Get a list of all records",
        "description" : "",
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "aspect",
          "in" : "query",
          "description" : "The aspects for which to retrieve data, specified as multiple occurrences of this query parameter.  Only records that have all of these aspects will be included in the response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "optionalAspect",
          "in" : "query",
          "description" : "The optional aspects for which to retrieve data, specified as multiple occurrences of this query parameter.  These aspects will be included in a record if available, but a record will be included even if it is missing these aspects.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "pageToken",
          "in" : "query",
          "description" : "A token that identifies the start of a page of results.  This token should not be interpreted as having any meaning, but it can be obtained from a previous page of results.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The index of the first record to retrieve.  When possible, specify pageToken instead as it will result in better performance.  If this parameter and pageToken are both specified, this parameter is interpreted as the index after the pageToken of the first record to retrieve.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of records to receive.  The response will include a token that can be passed as the pageToken parameter to a future request to continue receiving results where this query leaves off.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "dereference",
          "in" : "query",
          "description" : "true to automatically dereference links to other records; false to leave them as links.  Dereferencing a link means including the record itself where the link would be.  Dereferencing only happens one level deep, regardless of the value of this parameter.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecordSummary"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "records" ],
        "summary" : "Create a new record",
        "description" : "",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "record",
          "description" : "The definition of the new record.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Record"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Record"
            }
          },
          "400" : {
            "description" : "A record already exists with the supplied ID, or the record includes an aspect that does not exist.",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          }
        }
      }
    },
    "/records/{id}" : {
      "get" : {
        "tags" : [ "records" ],
        "summary" : "Get a record by ID",
        "description" : "Gets a complete record, including data for all aspects.",
        "operationId" : "getById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record to be fetched.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "aspect",
          "in" : "query",
          "description" : "The aspects for which to retrieve data, specified as multiple occurrences of this query parameter.  Only records that have all of these aspects will be included in the response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "optionalAspect",
          "in" : "query",
          "description" : "The optional aspects for which to retrieve data, specified as multiple occurrences of this query parameter.  These aspects will be included in a record if available, but a record will be included even if it is missing these aspects.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "dereference",
          "in" : "query",
          "description" : "true to automatically dereference links to other records; false to leave them as links.  Dereferencing a link means including the record itself where the link would be.  Dereferencing only happens one level deep, regardless of the value of this parameter.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Record"
            }
          },
          "404" : {
            "description" : "No record exists with that ID.",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "records" ],
        "summary" : "Modify a record by ID",
        "description" : "Modifies a record.  Aspects included in the request are created or updated, but missing aspects are not removed.",
        "operationId" : "putById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record to be fetched.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "record",
          "description" : "The record to save.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Record"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Record"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "records" ],
        "summary" : "Modify a record by applying a JSON Patch",
        "description" : "The patch should follow IETF RFC 6902 (https://tools.ietf.org/html/rfc6902).",
        "operationId" : "patchById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the aspect to be saved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "recordPatch",
          "description" : "The RFC 6902 patch to apply to the aspect.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JsonPatch"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AspectDefinition"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : { },
  "definitions" : {
    "AspectDefinition" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The unique identifier for the aspect type."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the aspect."
        },
        "jsonSchema" : {
          "type" : "object",
          "description" : "The JSON Schema of this aspect."
        }
      },
      "description" : "A type of aspect in the registry."
    },
    "JsonPatch" : {
      "type" : "object",
      "required" : [ "ops" ],
      "properties" : {
        "ops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Operation"
          }
        }
      }
    },
    "Operation" : {
      "type" : "object"
    },
    "EventType" : {
      "type" : "object",
      "required" : [ "aspectDefinitionEvent", "createEvent", "deleteEvent", "name", "patchEvent", "recordAspectEvent", "recordEvent", "value" ],
      "properties" : {
        "value" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "recordEvent" : {
          "type" : "boolean"
        },
        "aspectDefinitionEvent" : {
          "type" : "boolean"
        },
        "recordAspectEvent" : {
          "type" : "boolean"
        },
        "createEvent" : {
          "type" : "boolean"
        },
        "deleteEvent" : {
          "type" : "boolean"
        },
        "patchEvent" : {
          "type" : "boolean"
        }
      }
    },
    "WebHook" : {
      "type" : "object",
      "required" : [ "active", "config", "eventTypes", "name", "url" ],
      "properties" : {
        "id" : {
          "type" : "object"
        },
        "userId" : {
          "type" : "object"
        },
        "name" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "lastEvent" : {
          "type" : "object"
        },
        "url" : {
          "type" : "string"
        },
        "eventTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/EventType"
          }
        },
        "config" : {
          "$ref" : "#/definitions/WebHookConfig"
        }
      }
    },
    "WebHookConfig" : {
      "type" : "object",
      "properties" : {
        "aspects" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "optionalAspects" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "includeEvents" : {
          "type" : "object"
        },
        "includeRecords" : {
          "type" : "object"
        },
        "includeAspectDefinitions" : {
          "type" : "object"
        },
        "dereference" : {
          "type" : "object"
        }
      }
    },
    "Aspect" : {
      "type" : "object",
      "description" : "The JSON data for an aspect of a record."
    },
    "BadRequest" : {
      "type" : "object",
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string"
        }
      }
    },
    "DeleteResult" : {
      "type" : "object",
      "required" : [ "deleted" ],
      "properties" : {
        "deleted" : {
          "type" : "boolean"
        }
      }
    },
    "Record" : {
      "type" : "object",
      "required" : [ "aspects", "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The unique identifier of the record"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the record"
        },
        "aspects" : {
          "type" : "object",
          "description" : "The aspects included in this record"
        }
      },
      "description" : "A record in the registry, usually including data for one or more aspects."
    },
    "RecordSummary" : {
      "type" : "object",
      "required" : [ "aspects", "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The unique identifier of the record"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the record"
        },
        "aspects" : {
          "type" : "array",
          "description" : "The list of aspect IDs for which this record has data",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "A summary of a record in the registry.  Summaries specify which aspects are available, but do not include data for any aspects."
    }
  }
}
